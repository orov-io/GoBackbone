# This is a sample build configuration for Go.
# Check our guides at https://confluence.atlassian.com/x/5Q4SMw for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: golang:1.7

pipelines:
  branches:
    develop:
      - step:
          # set GCLOUD_PROJECT environment variable to your project ID
          # set GCLOUD_API_KEYFILE environment variable to base64-encoded keyfile as described here: https://confluence.atlassian.com/x/dm2xNQ
          name: Deploy to dev environment on Gcloud.
          deployment: test   # set to test, staging or production
          # trigger: manual  # uncomment to have a manual step
          image: google/cloud-sdk:latest
          script:
            - echo $GCLOUD_API_KEYFILE | base64 --decode --ignore-garbage > ./gcloud-api-key.json
            - gcloud auth activate-service-account --key-file gcloud-api-key.json
            - echo $APP_YAML | base64 --decode --ignore-garbage > ./app.yaml
            - echo $ID_SSH_KEY | base64 --decode --ignore-garbage > ./id_rsa
            - chmod 400 ./id_rsa
            - eval "$(ssh-agent -s)"
            - ssh-add ./id_rsa
            - git submodule update --init
            - gcloud config set project $GCLOUD_PROJECT
            - gcloud -q app deploy app.yaml

    master:
      - step:
          # set GCLOUD_PROJECT environment variable to your project ID
          # set GCLOUD_API_KEYFILE environment variable to base64-encoded keyfile as described here: https://confluence.atlassian.com/x/dm2xNQ
          name: Deploy master to production environment on GCloud.
          deployment: production   # set to test, staging or production
          # trigger: manual  # uncomment to have a manual step
          image: google/cloud-sdk:latest
          script:
            - echo $GCLOUD_API_KEYFILE | base64 --decode --ignore-garbage > ./gcloud-api-key.json
            - gcloud auth activate-service-account --key-file gcloud-api-key.json
            - echo $APP_YAML | base64 --decode --ignore-garbage > ./app.yaml
            - echo $ID_SSH_KEY | base64 --decode --ignore-garbage > ./id_rsa
            - chmod 400 ./id_rsa
            - eval "$(ssh-agent -s)"
            - ssh-add ./id_rsa
            - git submodule update --init
            - gcloud config set project $GCLOUD_PROJECT
            - gcloud -q app deploy app.yaml